{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/devdlaner/nf-tickets/front-end/src/components/CreateEntityPage.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useAnchorWallet, useWallet } from '@solana/wallet-adapter-react';\nimport { AnchorProvider, Program, web3, utils, Idl } from '@project-serum/anchor';\n\nexport default function CreateEntityPage() {\n  const wallet = useAnchorWallet();\n  const { connected } = useWallet();\n  const [name, setName] = useState('');\n  const [status, setStatus] = useState<string | null>(null);\n\n  const handleCreate = async () => {\n\n    console.log(\"üîò Bouton cliqu√©\");\n\n    \n    if (!wallet) {\n      setStatus('üîå Connect your wallet first');\n      return;\n    }\n\n    try {\n      setStatus('üì° Sending transaction...');\n\n      // 1. Charger l‚ÄôIDL\n    //   const idl: Idl = await fetch('/idl/ticketing-clean.json').then(res => res.json());\n    //   console.log(\"üß© Instructions keys:\", idl.instructions?.map(i => i.name));\n    //   for (const ix of idl.instructions) {\n    //     if (!ix.name || !ix.accounts || !ix.args) {\n    //       throw new Error(`‚ùå Mauvaise instruction d√©tect√©e: ${JSON.stringify(ix)}`);\n    //     }\n    //   }\n\n    console.log(\"AVANT CHARGEMENT IDL\");\n    const idlRaw = await fetch('/idl/ticketing-clean.json');\n    const idl = await idlRaw.json();\n    console.log(\" IDL charg√©:\", idl);\n\n    // V√©rifie que le champ 'instructions' existe bien\n    if (!idl.instructions || !Array.isArray(idl.instructions)) {\n      throw new Error(\"‚ùå IDL mal form√©: 'instructions' est manquant ou invalide.\");\n    }\n\n      // 2. Cr√©er le provider Anchor\n      const connection = new web3.Connection(process.env.NEXT_PUBLIC_SOLANA_RPC_URL!, 'processed');\n      const provider = new AnchorProvider(connection, wallet, AnchorProvider.defaultOptions());\n\n      // 3. Initialiser le programme\n    //   const programId = new web3.PublicKey(process.env.NEXT_PUBLIC_PROGRAM_ID!);\n    //   const program = new Program(idl, programId, provider);\n      const programId = new web3.PublicKey(\"EvxctWNDziXiJgYq8aCzucvgqXTgHPQ24VsieVZkyLGX\");\n      console.log('üõ† Cr√©ation du programme avec :', { idl, programId, provider });\n      const program = new Program(idl, programId, provider);\n\n      // 4. D√©river la PDA\n      const [entityPda] = web3.PublicKey.findProgramAddressSync(\n        [Buffer.from('entity'), wallet.publicKey.toBuffer()],\n        program.programId\n      );\n\n      // 5. Appel RPC\n      await program.methods\n        .initializeEntity(name)\n        .accounts({\n          entity: entityPda,\n          authority: wallet.publicKey,\n          systemProgram: web3.SystemProgram.programId,\n        })\n        .rpc();\n\n      setStatus(`‚úÖ Entity created at ${entityPda.toBase58()}`);\n    } catch (err: any) {\n      console.error(err);\n      setStatus(`‚ùå Error: ${err.message}`);\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto mt-10 p-4 border rounded shadow\">\n      {connected ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Entity Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className=\"w-full p-2 border rounded mb-2\"\n          />\n          <button\n            onClick={handleCreate}\n            disabled={!name}\n            className=\"w-full py-2 bg-purple-600 text-white rounded\"\n          >\n            Create Entity\n          </button>\n        </>\n      ) : (\n        <p className=\"text-center text-red-500\">Please connect your wallet.</p>\n      )}\n      {status && <p className=\"mt-4 text-sm\">{status}</p>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;AA6C6C;AAYpC;;AAvDT;AACA;AAAA;AACA;AAAA;AAAA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,0LAAA,CAAA,kBAAe,AAAD;IAC7B,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,oLAAA,CAAA,YAAS,AAAD;IAC9B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEpD,MAAM,eAAe;QAEnB,QAAQ,GAAG,CAAC;QAGZ,IAAI,CAAC,QAAQ;YACX,UAAU;YACV;QACF;QAEA,IAAI;YACF,UAAU;YAEV,mBAAmB;YACrB,uFAAuF;YACvF,8EAA8E;YAC9E,yCAAyC;YACzC,kDAAkD;YAClD,mFAAmF;YACnF,QAAQ;YACR,MAAM;YAEN,QAAQ,GAAG,CAAC;YACZ,MAAM,SAAS,MAAM,MAAM;YAC3B,MAAM,MAAM,MAAM,OAAO,IAAI;YAC7B,QAAQ,GAAG,CAAC,gBAAgB;YAE5B,kDAAkD;YAClD,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,MAAM,OAAO,CAAC,IAAI,YAAY,GAAG;gBACzD,MAAM,IAAI,MAAM;YAClB;YAEE,8BAA8B;YAC9B,MAAM,aAAa,IAAI,2MAAA,CAAA,OAAI,CAAC,UAAU,4DAA0C;YAChF,MAAM,WAAW,IAAI,2LAAA,CAAA,iBAAc,CAAC,YAAY,QAAQ,2LAAA,CAAA,iBAAc,CAAC,cAAc;YAErF,8BAA8B;YAChC,+EAA+E;YAC/E,2DAA2D;YACzD,MAAM,YAAY,IAAI,2MAAA,CAAA,OAAI,CAAC,SAAS,CAAC;YACrC,QAAQ,GAAG,CAAC,mCAAmC;gBAAE;gBAAK;gBAAW;YAAS;YAC1E,MAAM,UAAU,IAAI,2LAAA,CAAA,UAAO,CAAC,KAAK,WAAW;YAE5C,oBAAoB;YACpB,MAAM,CAAC,UAAU,GAAG,2MAAA,CAAA,OAAI,CAAC,SAAS,CAAC,sBAAsB,CACvD;gBAAC,8JAAA,CAAA,SAAM,CAAC,IAAI,CAAC;gBAAW,OAAO,SAAS,CAAC,QAAQ;aAAG,EACpD,QAAQ,SAAS;YAGnB,eAAe;YACf,MAAM,QAAQ,OAAO,CAClB,gBAAgB,CAAC,MACjB,QAAQ,CAAC;gBACR,QAAQ;gBACR,WAAW,OAAO,SAAS;gBAC3B,eAAe,2MAAA,CAAA,OAAI,CAAC,aAAa,CAAC,SAAS;YAC7C,GACC,GAAG;YAEN,UAAU,CAAC,oBAAoB,EAAE,UAAU,QAAQ,IAAI;QACzD,EAAE,OAAO,KAAU;YACjB,QAAQ,KAAK,CAAC;YACd,UAAU,CAAC,SAAS,EAAE,IAAI,OAAO,EAAE;QACrC;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;YACZ,0BACC;;kCACE,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;wBACvC,WAAU;;;;;;kCAEZ,6LAAC;wBACC,SAAS;wBACT,UAAU,CAAC;wBACX,WAAU;kCACX;;;;;;;6CAKH,6LAAC;gBAAE,WAAU;0BAA2B;;;;;;YAEzC,wBAAU,6LAAC;gBAAE,WAAU;0BAAgB;;;;;;;;;;;;AAG9C;GAjGwB;;QACP,0LAAA,CAAA,kBAAe;QACR,oLAAA,CAAA,YAAS;;;KAFT","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///home/devdlaner/nf-tickets/front-end/src/app/organization/register/page.tsx"],"sourcesContent":["// frontend/src/app/organization/register/page.tsx\r\n'use client';\r\n\r\nimport CreateEntityPage from '@/components/CreateEntityPage';\r\n\r\nexport default function RegisterOrgRoute() {\r\n  return <CreateEntityPage />;\r\n}\r\n"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAGlD;AAFA;;;AAIe,SAAS;IACtB,qBAAO,6LAAC,yIAAA,CAAA,UAAgB;;;;;AAC1B;KAFwB","debugId":null}}]
}